<?xml version="1.0" ?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="true"/>
  <arg name="debug" default="false"/>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find dji_gazebo)/worlds/bridge.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find dji_description)/urdf/dji.xacro'" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model dji -param robot_description -x 0 -y 0 -z 2.0"/>
	
  <!-- Load static tf publishers-->
  <include file="$(find dji_gazebo)/launch/tf_pub.launch"/>
	
  <include file="$(find g2_control)/launch/g2_control.launch"/>
  <include file="$(find robot_control)/launch/robot_control.launch"/>
  <include file="$(find rl_manager)/launch/rl_manager.launch"/>
  


  <!-- <node name="rviz_viz" pkg="rviz" type="rviz" args="-d $(find dji_gazebo)/rviz/dji_sim.rviz"/> -->
  
<!--   <node name="octomap_server_node" pkg="octomap_server" type="octomap_server_node">
    <remap from="/cloud_in" to="/dji_sim/laser/pointcloud"/>
    <param name="frame_id"  value="world"/>   
    <param name="resolution"  value="0.05"/>  
    <param name="latch"  value="false"/> 
  </node>
 -->	
</launch>
